{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["figlet","parseFont","ANSI_Shadow","App","fileSystem","FileSystem","create","content","link","commandMapping","CommandMapping","defaultCommandMapping","help","function","state","opts","output","OutputFactory","makeTextOutput","optDef","list","console","log","GetHistory","print","filePath","getEnvVariables","get","charAt","js","getFileSystem","toJS","htmlContent","makeErrorOutput","title","textSync","font","README","skills","customState","EmulatorState","fs","emulatorState","inputStr","promptSymbol","this","theme","ReactThemes","hacker","onInputChange","setState","onStateChange","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c0eb447b.chunk.js","sourcesContent":["//import asciifyImage from \"asciify-image\";\r\nimport figlet from 'figlet';\r\nimport ANSI_Shadow from 'figlet/importable-fonts/ANSI Shadow';\r\nimport {\r\n\tCommandMapping,\r\n\tdefaultCommandMapping,\r\n\tEmulatorState,\r\n\tFileSystem,\r\n\tOutputFactory\r\n} from 'javascript-terminal';\r\nimport React, { Component } from 'react';\r\n//import AsciiImage from './AsciiImage';\r\n//import ReactTerminal from 'ReactTerminal';\r\n//import { ReactTerminal, EmulatorState, FileSystem, ReactThemes } from 'react-terminal-component';\r\nimport { ReactOutputRenderers, ReactTerminalStateless, ReactThemes } from 'react-terminal-component';\r\n//import { hasDirectory } from 'fs/operations/directory-operations';\r\n\r\nfiglet.parseFont('ANSI_Shadow', ANSI_Shadow);\r\n\r\n\r\n//const PAPER_TYPE = 'paper';\r\n\r\n// const paperStyles = {\r\n//   backgroundColor: 'white',\r\n//   color: 'black',\r\n//   fontFamily: 'sans-serif',\r\n//   padding: '1em',\r\n//   margin: '1em 0',\r\n//   borderRadius: '0.2em'\r\n// };\r\n/*\r\nconst PaperOutput = ({ content }) => (\r\n\t<>\r\n\t{content.title}\r\n  <AsciiImage url='https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png' animated='false'\t />\r\n  </>\r\n);\r\n\r\nconst createPaperRecord = (title, body) => {\r\n  return new OutputFactory.OutputRecord({\r\n    type: PAPER_TYPE,\r\n    content: {\r\n      title,\r\n      body\r\n    }\r\n  });\r\n};*/\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tconst fileSystem = FileSystem.create({\r\n\t\t\t'/README': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t' █████╗ ██████╗  █████╗ ███╗   ███╗    ██████╗ ██████╗ ███████╗ ██████╗ ███████╗ ██████╗ ██╗    ██╗███████╗██╗  ██╗██╗\\n' +\r\n\t\t\t\t\t'██╔══██╗██╔══██╗██╔══██╗████╗ ████║    ██╔══██╗██╔══██╗╚══███╔╝██╔═══██╗╚══███╔╝██╔═══██╗██║    ██║██╔════╝██║ ██╔╝██║\\n' +\r\n\t\t\t\t\t'███████║██║  ██║███████║██╔████╔██║    ██████╔╝██████╔╝  ███╔╝ ██║   ██║  ███╔╝ ██║   ██║██║ █╗ ██║███████╗█████╔╝ ██║\\n' +\r\n\t\t\t\t\t'██╔══██║██║  ██║██╔══██║██║╚██╔╝██║    ██╔══██╗██╔══██╗ ███╔╝  ██║   ██║ ███╔╝  ██║   ██║██║███╗██║╚════██║██╔═██╗ ██║\\n' +\r\n\t\t\t\t\t'██║  ██║██████╔╝██║  ██║██║ ╚═╝ ██║    ██████╔╝██║  ██║███████╗╚██████╔╝███████╗╚██████╔╝╚███╔███╔╝███████║██║  ██╗██║\\n' +\r\n\t\t\t\t\t'╚═╝  ╚═╝╚═════╝ ╚═╝  ╚═╝╚═╝     ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚══════╝ ╚═════╝  ╚══╝╚══╝ ╚══════╝╚═╝  ╚═╝╚═╝\\n' +\r\n\t\t\t\t\t'Welcome to my website. This is a fun experiment to\\n' +\r\n\t\t\t\t\t\"showcase my portfolio and stuff I have done.\\n\\nType 'help' in the console for a list of commands\\nType 'ls' to list the directory\\n\\n\"\r\n\t\t\t},\r\n\t\t\t'/skills': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t'I have listed out my most used skills and abilities along with my skill level\\n\\n' +\r\n\t\t\t\t\t'Unity:          **********\\n' +\r\n\t\t\t\t\t'C#:             **********\\n' +\r\n\t\t\t\t\t'Unreal:         *******---\\n' +\r\n\t\t\t\t\t'C++:            ****------\\n' +\r\n\t\t\t\t\t'Swift:          *****-----\\n' +\r\n\t\t\t\t\t'React:          ******----\\n' +\r\n\t\t\t\t\t'Photoshop:      ********--\\n' +\r\n\t\t\t\t\t'\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/games': {},\r\n\t\t\t'/games/nyx': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t' ███▄    █▓██   ██▓▒██   ██▒\\n' +\r\n\t\t\t\t\t' ██ ▀█   █ ▒██  ██▒▒▒ █ █ ▒░\\n' +\r\n\t\t\t\t\t'▓██  ▀█ ██▒ ▒██ ██░░░  █   ░\\n' +\r\n\t\t\t\t\t'▓██▒  ▐▌██▒ ░ ▐██▓░ ░ █ █ ▒ \\n' +\r\n\t\t\t\t\t'▒██░   ▓██░ ░ ██▒▓░▒██▒ ▒██▒\\n' +\r\n\t\t\t\t\t'░ ▒░   ▒ ▒   ██▒▒▒ ▒▒ ░ ░▓ ░\\n' +\r\n\t\t\t\t\t'░ ░░   ░ ▒░▓██ ░▒░ ░░   ░▒ ░\\n' +\r\n\t\t\t\t\t'   ░   ░ ░ ▒ ▒ ░░   ░    ░  \\n' +\r\n\t\t\t\t\t'         ░ ░ ░      ░    ░  \\n' +\r\n\t\t\t\t\t'           ░ ░              \\n\\n' +\r\n\t\t\t\t\t'\"Nyx\" was a game I worked on to be launched with the GearVR. It was a space shooter\\n' +\r\n\t\t\t\t\t'on rails. Working with the design to produce a level build and gameplay.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/games/pants': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t' ________  ________  ________   _________  ________      \\n' +\r\n\t\t\t\t\t'|\\\\   __  \\\\|\\\\   __  \\\\|\\\\   ___  \\\\|\\\\___   ___\\\\\\\\   ____\\\\     \\n' +\r\n\t\t\t\t\t'\\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\|___ \\\\  \\\\_\\\\ \\\\  \\\\___|_    \\n' +\r\n\t\t\t\t\t' \\\\ \\\\   ____\\\\ \\\\   __  \\\\ \\\\  \\\\\\\\ \\\\  \\\\   \\\\ \\\\  \\\\ \\\\ \\\\_____  \\\\   \\n' +\r\n\t\t\t\t\t'  \\\\ \\\\  \\\\___|\\\\ \\\\  \\\\ \\\\  \\\\ \\\\  \\\\\\\\ \\\\  \\\\   \\\\ \\\\  \\\\ \\\\|____|\\\\  \\\\  \\n' +\r\n\t\t\t\t\t'   \\\\ \\\\__\\\\    \\\\ \\\\__\\\\ \\\\__\\\\ \\\\__\\\\\\\\ \\\\__\\\\   \\\\ \\\\__\\\\  ____\\\\_\\\\  \\\\ \\n' +\r\n\t\t\t\t\t'    \\\\|__|     \\\\|__|\\\\|__|\\\\|__| \\\\|__|    \\\\|__| |\\\\_________\\\\\\n' +\r\n\t\t\t\t\t'                                             \\\\|_________|\\n' +\r\n\t\t\t\t\t'                                                         \\n' +\r\n\t\t\t\t\t'\"Pants!: Don\\'t Die Naked\" was a game I did all of the programming on. It was a \\n' +\r\n\t\t\t\t\t'simple game in the vein of flappy birds. This a fun project that allowed us to\\n' +\r\n\t\t\t\t\t'published on three different platforms.\\n\\n'\r\n\r\n\t\t\t},\r\n\t\t\t'/games/deliver-it': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t'  ________     __________                        ____________ \\n' +\r\n\t\t\t\t\t'  ___  __ \\\\_______  /__(_)__   ______________    ____  _/_  /_\\n' +\r\n\t\t\t\t\t'  __  / / /  _ \\\\_  /__  /__ | / /  _ \\\\_  ___/     __  / _  __/\\n' +\r\n\t\t\t\t\t'  _  /_/ //  __/  / _  / __ |/ //  __/  /        __/ /  / /_  \\n' +\r\n\t\t\t\t\t'  /_____/ \\\\___//_/  /_/  _____/ \\\\___//_/         /___/  \\\\__/  \\n' +\r\n\t\t\t\t\t'                                                              \\n' +\r\n\t\t\t\t\t'\"Deliver It\" is a driving game similar to Smuggle Truck used as training game.\\n' +\r\n\t\t\t\t\t'The game included humorous descriptions to assist in the training of users.\\n' +\r\n\t\t\t\t\t\"The game consist of a delivery truck that takes a load to the next stop.\\n\\n\",\r\n\t\t\t},\r\n\t\t\t'/games/rockpocalpse': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t'                                                     \\n' +\r\n\t\t\t\t\t' _____         _                   _                 \\n' +\r\n\t\t\t\t\t'| __  |___ ___| |_ ___ ___ ___ ___| |_ _ ___ ___ ___ \\n' +\r\n\t\t\t\t\t'|    -| . |  _| \\'_| . | . | _ | .\\'| | | | . |_ -| -_|\\n' +\r\n\t\t\t\t\t'|__|__|___|___|_,_|  _|___|___|__,|_|_  |  _|___|___|\\n' +\r\n\t\t\t\t\t'                  |_|               |___|_|          \\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\"Rockpocolypse\" was a game we teamed up with Dwayne \"The Rock\" Johnson to create a fighting game.\\n' +\r\n\t\t\t\t\t'It was focused on mechanim animation system along with doing some custom UI controls and transitions.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/games/luma-link': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t' ___      __   __  __   __  _______    ___      ___   __    _  ___   _ \\n' +\r\n\t\t\t\t\t'|   |    |  | |  ||  |_|  ||   _   |  |   |    |   | |  |  | ||   | | |\\n' +\r\n\t\t\t\t\t'|   |    |  | |  ||       ||  |_|  |  |   |    |   | |   |_| ||   |_| |\\n' +\r\n\t\t\t\t\t'|   |    |  |_|  ||       ||       |  |   |    |   | |       ||      _|\\n' +\r\n\t\t\t\t\t'|   |___ |       ||       ||       |  |   |___ |   | |  _    ||     |_ \\n' +\r\n\t\t\t\t\t'|       ||       || ||_|| ||   _   |  |       ||   | | | |   ||    _  |\\n' +\r\n\t\t\t\t\t'|_______||_______||_|   |_||__| |__|  |_______||___| |_|  |__||___| |_|\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\"Luma Link\" was a puzzle game where you slide futuristic tiles to get the ball to the end.\\n' +\r\n\t\t\t\t\t'I setup a content managment system that allowed for daily levels to be setup.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/games/veggie-tales': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t' __ __    ___   ____   ____  ____    ___      ______   ____  _        ___  _____\\n' +\r\n\t\t\t\t\t'|  |  |  /  _] /    | /    ||    |  /  _]    |      | /    || |      /  _]/ ___/\\n' +\r\n\t\t\t\t\t'|  |  | /  [_ |   __||   __| |  |  /  [_     |      ||  o  || |     /  [_(   \\\\_ \\n' +\r\n\t\t\t\t\t'|  |  ||    _]|  |  ||  |  | |  | |    _]    |_|  |_||     || |___ |    _]\\\\__  |\\n' +\r\n\t\t\t\t\t'|  :  ||   [_ |  |_ ||  |_ | |  | |   [_       |  |  |  _  ||     ||   [_ /  \\\\ |\\n' +\r\n\t\t\t\t\t' \\\\   / |     ||     ||     | |  | |     |      |  |  |  |  ||     ||     |\\\\    |\\n' +\r\n\t\t\t\t\t'  \\\\_/  |_____||___,_||___,_||____||_____|      |__|  |__|__||_____||_____| \\\\___|\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\"Veggie Tales: League Of Incredible Vegetables\" was a combat strategy game were you controlled\\n' +\r\n\t\t\t\t\t'the veggie tales characters. I handled on the development for combat and UI.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/games/its-fred': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t' _______ __  __             _______                __ \\n' +\r\n\t\t\t\t\t'|_     _|  ||  |.-----.    |    ___|.----.-----.--|  |\\n' +\r\n\t\t\t\t\t' _|   |_|   _|_||__ --|    |    ___||   _|  -__|  _  |\\n' +\r\n\t\t\t\t\t'|_______|____|  |_____|    |___|    |__| |_____|_____|\\n' +\r\n\t\t\t\t\t'                                                      \\n' +\r\n\t\t\t\t\t'\"It\\'s Fred\" was a game based from Fred Figglehorn, a Youtube Personality. You can throw the\\n' +\r\n\t\t\t\t\t'character around as a ragdoll and collect different items.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/interactive': {},\r\n\t\t\t'/interactive/ces2020': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t':\\'######::\\'########::\\'######::::::\\'#######::::\\'#####::::\\'#######::::\\'#####:::\\n' +\r\n\t\t\t\t\t'\\'##... ##: ##.....::\\'##... ##::::\\'##.... ##::\\'##.. ##::\\'##.... ##::\\'##.. ##::\\n' +\r\n\t\t\t\t\t' ##:::..:: ##::::::: ##:::..:::::..::::: ##:\\'##:::: ##:..::::: ##:\\'##:::: ##:\\n' +\r\n\t\t\t\t\t' ##::::::: ######:::. ######::::::\\'#######:: ##:::: ##::\\'#######:: ##:::: ##:\\n' +\r\n\t\t\t\t\t' ##::::::: ##...:::::..... ##::::\\'##:::::::: ##:::: ##:\\'##:::::::: ##:::: ##:\\n' +\r\n\t\t\t\t\t' ##::: ##: ##:::::::\\'##::: ##:::: ##::::::::. ##:: ##:: ##::::::::. ##:: ##::\\n' +\r\n\t\t\t\t\t'. ######:: ########:. ######::::: #########::. #####::: #########::. #####:::\\n' +\r\n\t\t\t\t\t':......:::........:::......::::::.........::::.....::::.........::::.....::::\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\"CES 2020\" I worked with Bell to create a virtual city with 1000 AI characters and vehicles traveling in the city.\\n' +\r\n\t\t\t\t\t'Scripted events would trigger at different times of day to showcase emergency situation with on demand mobility. \\n\\n'\r\n\t\t\t},\r\n\t\t\t'/interactive/future-flight-controls': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t'                               \\n' +\r\n\t\t\t\t\t' _|_|_|_|  _|_|_|_|    _|_|_|  \\n' +\r\n\t\t\t\t\t' _|        _|        _|        \\n' +\r\n\t\t\t\t\t' _|_|_|    _|_|_|    _|        \\n' +\r\n\t\t\t\t\t' _|        _|        _|        \\n' +\r\n\t\t\t\t\t' _|        _|          _|_|_| \\n' +\r\n\t\t\t\t\t'                              \\n' +\r\n\t\t\t\t\t'\"Future Flight Controls\" was a project where we create a simulation that allowed non-pilots to try new approchable\\n' +\r\n\t\t\t\t\t'control schemes.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/interactive/ces2019': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t'  /$$$$$$  /$$$$$$$$  /$$$$$$         /$$$$$$   /$$$$$$    /$$    /$$$$$$ \\n' +\r\n\t\t\t\t\t' /$$__  $$| $$_____/ /$$__  $$       /$$__  $$ /$$$_  $$ /$$$$   /$$__  $$\\n' +\r\n\t\t\t\t\t'| $$  \\\\__/| $$      | $$  \\\\__/      |__/  \\\\ $$| $$$$\\\\ $$|_  $$  | $$  \\\\ $$\\n' +\r\n\t\t\t\t\t'| $$      | $$$$$   |  $$$$$$         /$$$$$$/| $$ $$ $$  | $$  |  $$$$$$$\\n' +\r\n\t\t\t\t\t'| $$      | $$__/    \\\\____  $$       /$$____/ | $$\\\\ $$$$  | $$   \\\\____  $$\\n' +\r\n\t\t\t\t\t'| $$    $$| $$       /$$  \\\\ $$      | $$      | $$ \\\\ $$$  | $$   /$$  \\\\ $$\\n' +\r\n\t\t\t\t\t'|  $$$$$$/| $$$$$$$$|  $$$$$$/      | $$$$$$$$|  $$$$$$/ /$$$$$$|  $$$$$$/\\n' +\r\n\t\t\t\t\t' \\\\______/ |________/ \\\\______/       |________/ \\\\______/ |______/ \\\\______/ \\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\"CES 2019\" Setup a 3D Presentation showcasing the new solutions for urban mobility.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/interactive/motor-parts-of-america': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t' _____ ______   ________  ________     \\n' +\r\n\t\t\t\t\t'|\\\\   _ \\\\  _   \\\\|\\\\   __  \\\\|\\\\   __  \\\\    \\n' +\r\n\t\t\t\t\t'\\\\ \\\\  \\\\\\\\\\\\__\\\\ \\\\  \\\\ \\\\  \\\\|\\\\  \\\\ \\\\  \\\\|\\\\  \\\\   \\n' +\r\n\t\t\t\t\t' \\\\ \\\\  \\\\\\\\|__| \\\\  \\\\ \\\\   ____\\\\ \\\\   __  \\\\  \\n' +\r\n\t\t\t\t\t'  \\\\ \\\\  \\\\    \\\\ \\\\  \\\\ \\\\  \\\\___|\\\\ \\\\  \\\\ \\\\  \\\\ \\n' +\r\n\t\t\t\t\t'   \\\\ \\\\__\\\\    \\\\ \\\\__\\\\ \\\\__\\\\    \\\\ \\\\__\\\\ \\\\__\\\\\\n' +\r\n\t\t\t\t\t'    \\\\|__|     \\\\|__|\\\\|__|     \\\\|__|\\\\|__|\\n' +\r\n\t\t\t\t\t'                                       \\n' +\r\n\t\t\t\t\t'\"Motor Parts of America\" worked with team to refine and improve the look and feel of the MPA mobile application.\\n\\n'\r\n\t\t\t},\r\n\t\t\t'/links': {},\r\n\t\t\t'/links/twitter': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t\"Twitter profile: https://twitter.com/Adamcbrz\\n\\ncall 'open twitter' to open the link in a new window\\n\\n\",\r\n\t\t\t\tlink: 'https://twitter.com/Adamcbrz'\r\n\t\t\t},\r\n\t\t\t'/links/linkedin': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t\"LinkedIn profile: https://www.linkedin.com/in/adamcbrz/\\n\\ncall 'open linkedin' to open the link in a new window\\n\\n\",\r\n\t\t\t\tlink: 'https://www.linkedin.com/in/adamcbrz/'\r\n\t\t\t},\r\n\t\t\t'/links/medium': {\r\n\t\t\t\tcontent:\r\n\t\t\t\t\t\"Medium profile: https://medium.com/@Adamcbrz\\n\\ncall 'open medium' to open the link in a new window\\n\\n\",\r\n\t\t\t\tlink: 'https://medium.com/@Adamcbrz'\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst commandMapping = CommandMapping.create({\r\n\t\t\t...defaultCommandMapping,\r\n\t\t\thelp: {\r\n\t\t\t\tfunction: (state, opts) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toutput: OutputFactory.makeTextOutput(\r\n\t\t\t\t\t\t\t'Commands\\n==================================\\n\\n' +\r\n\t\t\t\t\t\t\t'cat, print:    Print file content\\n\\n' +\r\n\t\t\t\t\t\t\t'cd:            Change directory\\n\\n' +\r\n\t\t\t\t\t\t\t'help:          Display the list of commands\\n\\n' +\r\n\t\t\t\t\t\t\t'ls:            List directory\\n\\n' +\r\n\t\t\t\t\t\t\t'open [link]:   Opens link in browser\\n\\n' +\r\n\t\t\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t\t\t'Recommendation\\n==================================\\n\\nTry changing directory to home and listing the directory \\nto see the different options:\\n\\n' +\r\n\t\t\t\t\t\t\t'ls\\n\\n'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\toptDef: {}\r\n\t\t\t},\r\n\r\n\t\t\tlist: {\r\n\t\t\t\tfunction: (state, opts) => {\r\n\t\t\t\t\tconsole.log(state);\r\n\t\t\t\t\tconsole.log('history');\r\n\t\t\t\t\tconsole.log(state.GetHistory());\r\n\r\n\t\t\t\t\treturn { output: OutputFactory.makeTextOutput('done') };\r\n\t\t\t\t},\r\n\t\t\t\toptDef: {}\r\n\t\t\t},\r\n\t\t\tprint: {\r\n\t\t\t\tfunction: (state, opts) => {\r\n\t\t\t\t\tlet path = state.getEnvVariables().get('cwd');\r\n\t\t\t\t\tlet filePath = path;\r\n\t\t\t\t\t//console.log(filePath);\r\n\t\t\t\t\tif (opts[0]) {\r\n\t\t\t\t\t\tif (opts[0].charAt(0) === '/') {\r\n\t\t\t\t\t\t\tfilePath = opts[0];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (filePath === '/') {\r\n\t\t\t\t\t\t\t\tfilePath = '/' + opts[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tfilePath += '/' + opts[0];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet fs = state.getFileSystem();\r\n\t\t\t\t\tlet file = fs.get(filePath);\r\n\t\t\t\t\tlet js = file.toJS() || {};\r\n\r\n\t\t\t\t\tlet { content, htmlContent } = js;\r\n\r\n\t\t\t\t\tif (htmlContent) {\r\n\t\t\t\t\t\tconsole.log(htmlContent);\r\n\t\t\t\t\t\tlet title = figlet.textSync(htmlContent.title, {\r\n\t\t\t\t\t\t\tfont: 'ANSI_Shadow'\r\n\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t\tconsole.log(title);\r\n\t\t\t\t\t\t//  return {\r\n\t\t\t\t\t\t//  \toutput: createPaperRecord(title, htmlContent.body)\r\n\t\t\t\t\t\t// };\r\n\t\t\t\t\t} else if (content) {\r\n\t\t\t\t\t\tconsole.log(content);\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\toutput: OutputFactory.makeTextOutput(content)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\toutput: OutputFactory.makeErrorOutput(\r\n\t\t\t\t\t\t\t\t'No Content Found!'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\toptDef: {}\r\n\t\t\t},\r\n\t\t\tREADME: {\r\n\t\t\t\tfunction: (state, opts) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toutput: OutputFactory.makeTextOutput(\r\n\t\t\t\t\t\t\t'Command not found!\\n\\nSuggestion: print README\\n\\n'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\toptDef: {}\r\n\t\t\t},\r\n\t\t\tskills: {\r\n\t\t\t\tfunction: (state, opts) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toutput: OutputFactory.makeTextOutput(\r\n\t\t\t\t\t\t\t'Command not found!\\n\\nSuggestion: print skills\\n\\n'\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\toptDef: {}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst customState = EmulatorState.create({\r\n\t\t\tfs: fileSystem,\r\n\t\t\tcommandMapping: commandMapping\r\n\t\t});\r\n\r\n\t\tthis.state = {\r\n\t\t\temulatorState: customState,\r\n\t\t\tinputStr: 'print README',\r\n\t\t\tpromptSymbol: 'website->'\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Font.create('Test', (err, results) => {\r\n\t\t// \tconsole.log(err);\r\n\t\t// \tconsole.log(results);\r\n\t\t// });\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ReactTerminalStateless\r\n\t\t\t\t\tpromptSymbol={this.state.promptSymbol}\r\n\t\t\t\t\tinputStr={this.state.inputStr}\r\n\t\t\t\t\temulatorState={this.state.emulatorState}\r\n\t\t\t\t\ttheme={ReactThemes.hacker}\r\n\t\t\t\t\t// outputRenderers={{\r\n\t\t\t\t\t// \t...ReactOutputRenderers,\r\n\t\t\t\t\t// \t[PAPER_TYPE]: PaperOutput\r\n\t\t\t\t\t//   }}\r\n\t\t\t\t\tonInputChange={inputStr => this.setState({ inputStr })}\r\n\t\t\t\t\tonStateChange={emulatorState => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\temulatorState,\r\n\t\t\t\t\t\t\tinputStr: ''\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}